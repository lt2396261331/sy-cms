{
  "compilerOptions": {
    // 目标代码(ts -> js(es5/6/7))
    "target": "esnext",
    // 目标代码使用的模块化方案(commonjs requires/module.exports/es module import/export)
    "module": "esnext",
    // 严格模式 一些严格检查
    "strict": true,
    // 对jsx进行怎么样的处理
    "jsx": "preserve",
    // 辅助的导入功能
    "importHelpers": true,
    // 按照node的方式解析模块 import
    "moduleResolution": "node",
    // 跳过对一些库的类型检测 (axios -> 类型/ loadsh -> @type/lodash / 其他第三方)
    "skipLibCheck": true,
    // export default/module.exports = {}
    // es module和commonjs能不能混合使用
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    // 要不要生成映射文件(ts -> js)
    "sourceMap": true,
    // 文件路径在解析时，基本的url
    "baseUrl": ".",
    // 指定具体要解析使用的类型
    "types": ["webpack-env", "element-plus/global"],
    // 路径解析（类似于webpack alias）
    "paths": {
      "@/*": ["src/*"]
    },
    // 可以指定在项目中可以使用那些库的类型
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": ["node_modules"]
}
